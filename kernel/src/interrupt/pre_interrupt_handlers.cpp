#include <kernel/interrupt/interrupt_hardware_specified.hpp>
#include <kernel/interrupt/interrupt.hpp>

#include <arch_inline_asm.hpp>

#include <kernel/debug.hpp>

#include <arch/interrupt_hardware.hpp>
#include <arch/interrupt_controller.hpp>

#ifdef CONFIG_USE_INTERRUPT

interrupt_handler_t interrupt::handler::get_hardware_specified(int index) {
    INTERRUPT_HARDWARE_SPECIFIED_ARRAY
    if(index >= INTERRUPT_HARDWARE_SPECIFIED_MAXCOUNT) {
        return 0x00;
    }
    return handlers[index];
}

#define INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(handler_num) \
__attribute__ ((naked)) void interrupt::handler::hardware_specified##handler_num(void) {\
    interrupt_handler_t handler;\
    if((handler = interrupt::handler::get_hardware_specified(handler_num)) == 0x00) {\
        char *name = GLOBAL_OBJECT(interrupt::HardwareSpecifiedInterruptManager)->interrupt_list[handler_num].name;\
        debug::panic("Unhandled special interrupt %d(\"%s\")\n" , handler_num , name);\
    }\
    handler();\
    interrupt::controller::interrupt_received();\
    IA_INTERRUPT_RETURN\
}

INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(0)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(1)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(2)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(3)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(4)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(5)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(6)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(7)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(8)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(9)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(10)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(11)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(12)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(13)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(14)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(15)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(16)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(17)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(18)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(19)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(20)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(21)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(22)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(23)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(24)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(25)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(26)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(27)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(28)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(29)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(30)
INTERRUPT_HARDWARE_SPECIFIED_HANDLER_FUNCTION(31)

#endif